:root {
  /* var increments */
  --r-increment: -10;
  --g-increment: 5;
  --b-increment: 13.5;
  --o-increment: -0.025;
  --size-increment: 30px;
  --delay-increment: 0.1s;
  --border-increment: 0px;

  /* first ring's values. offset by 1x increment to compensate for index starting at i=1 */
  --r-start: calc(255 - var(--r-increment));
  --g-start: calc(255 - var(--g-increment));
  --b-start: calc(255 - var(--b-increment));
  --o-start: calc(0.5 - var(--o-increment));
  --size-start: calc(30px - var(--size-increment));
  --delay-start: calc(0s - var(--delay-increment));
  --border-start: calc(2px - var(--border-increment));
}

* {
  box-sizing: border-box;
  margin: 0;
}

body {
  background-color: #456;
  font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen, Ubuntu,
    Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
  height: 100vh;
  width: 100vw;
  display: flex;
  justify-content: center;
  flex-direction: column;
  align-items: center;
  box-shadow: inset 0 0 20vw rgba(0, 0, 0, 0.75);
  overflow: hidden;
}

.wrapper {
  /* min-height: 450px;
  max-height: 750px;
  min-width: 600px;
  max-width: 1000px;
  height: 90vh;
  width: 90vw;
  flex: 1;

  background-color: #ddd;
  box-shadow: inset 0 0 3rem rgba(0, 0, 0, 1), 0 0 5rem rgba(0, 0, 0, 0.75);
  border: 1rem ridge #a64; */

  display: flex;
  justify-content: center;
  align-items: center;

  perspective: 800px;
}

/*
.wrapper {
  background-color: #ddd;
  height: 600px;
  width: 800px;

  perspective: 800px;
  perspective-origin: 50% 0px;

  display: flex;

  box-shadow: inset 0 0 2rem rgba(0, 0, 0, 0.75);
  border: 1px black solid;
}

aside {
  position: absolute;
  height: 200px;
  width: 200px;
  border: 1px solid black;
  border-radius: 100%;
}
aside:nth-of-type(n) {
  height: calc(200 - n) px;
}
 */
aside {
  transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);

  position: absolute;
  border: 4px solid #0000;
  border-radius: 50%;

  animation: tumble 15s linear infinite;

  /* animation: ripple2 1s linear infinite; */
  animation-composition: add;
}

aside.ring {
  --i: 0; /* only change this. */

  /* written for universality. */
  /* each ring uses this ruleset. Just change --i in each individual ring, and all  properties will be set according to the rules in :root{} */
  --r: calc(var(--r-start) + calc(var(--r-increment) * var(--i)));
  --g: calc(var(--g-start) + calc(var(--g-increment) * var(--i)));
  --b: calc(var(--b-start) + calc(var(--b-increment) * var(--i)));
  --o: calc(var(--o-start) + calc(var(--o-increment) * var(--i)));
  color: rgba(var(--r), var(--g), var(--b), var(--o));
  /* background-color: rgba(var(--r), var(--g), var(--b), var(--o)); */
  border-color: rgba(var(--r), var(--g), var(--b), var(--o));

  --size: calc(var(--size-start) + calc(var(--size-increment) * var(--i)));
  width: var(--size);
  height: var(--size);
  --delay: calc(var(--delay-start) + calc(var(--delay-increment) * var(--i)));
  animation-delay: var(--delay);
  --border: calc(var(--border-start) + calc(var(--border-increment) * var(--i)));
  border-width: var(--border);
  /* ##### */
}

aside:nth-of-type(1).ring {
  --i: 1; /* only change this. */
}
aside:nth-of-type(2).ring {
  --i: 2; /* only change this. */
}
aside:nth-of-type(3).ring {
  --i: 3; /* only change this. */
}
aside:nth-of-type(4).ring {
  --i: 4; /* only change this. */
}
aside:nth-of-type(5).ring {
  --i: 5; /* only change this. */
}
aside:nth-of-type(6).ring {
  --i: 6; /* only change this. */
}
aside:nth-of-type(7).ring {
  --i: 7; /* only change this. */
}
aside:nth-of-type(8).ring {
  --i: 8; /* only change this. */
}
aside:nth-of-type(9).ring {
  --i: 9; /* only change this. */
}
aside:nth-of-type(10).ring {
  --i: 10; /* only change this. */
}
aside:nth-of-type(11).ring {
  --i: 11; /* only change this. */
}
aside:nth-of-type(12).ring {
  --i: 12; /* only change this. */
}
aside:nth-of-type(13).ring {
  --i: 13; /* only change this. */
}
aside:nth-of-type(14).ring {
  --i: 14; /* only change this. */
}
aside:nth-of-type(15).ring {
  --i: 15; /* only change this. */
}
aside:nth-of-type(16).ring {
  --i: 16; /* only change this. */
}
aside:nth-of-type(17).ring {
  --i: 17; /* only change this. */
}
aside:nth-of-type(18).ring {
  --i: 18; /* only change this. */
}
aside:nth-of-type(19).ring {
  --i: 19; /* only change this. */
}
aside:nth-of-type(20).ring {
  --i: 20; /* only change this. */
}

@keyframes rotate {
  0% {
    transform: unset;
  }
  100% {
    transform: rotateY(360deg);
  }
}

@keyframes tumble {
  0% {
  }
  100% {
    transform: rotateX(1800deg) rotateY(1440deg) rotateZ(1080deg);
  }
}

@keyframes ripple {
  0% {
    transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);
  }
  50% {
    transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg) translateZ(100px);
  }
  100% {
    transform: rotateX(60deg) rotateY(0deg) rotateZ(45deg);
  }
}

@keyframes ripple2 {
  0% {
    transform: translateZ(0px);
  }
  25% {
    transform: translateZ(-100px);
  }
  50% {
    transform: translateZ(0px);
  }
  75% {
    transform: translateZ(100px);
  }
  100% {
    transform: translateZ(0px);
  }
}
